class Solution {
public: 
    int getLength(ListNode * head){
        ListNode * temp = head;
        int count = 0;
        while(temp  != NULL){
            count++;
            temp = temp -> next;
        }

        return count;
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head == NULL){
            return NULL;
        }

        if(head -> next == NULL){
            return head;
        }

        int len = getLength(head);

        if(len < k){
           return head;
        }

        ListNode * prev = NULL;
        ListNode * curr = head;
        ListNode * forward = NULL;
        
        int count = 0;
        while(count != k){
            forward = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = forward;
            count++;
        }

        if(forward != NULL){
            head -> next = reverseKGroup(forward , k);
        }

        return prev;
    }
};
