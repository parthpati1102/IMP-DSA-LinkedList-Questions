class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL){
            return list2;
        }

        if(list2 == NULL){
            return list1;
        }
       
        ListNode * dummy = new ListNode(-1);
        ListNode * temp3 = dummy;

        ListNode * temp1 = list1;
        ListNode * temp2 = list2;

        while(temp1 != NULL && temp2 != NULL){
            if(temp1 -> val <= temp2 -> val){
                ListNode * newNode = new ListNode(temp1 -> val);
                temp3 -> next = temp1;
                temp3 = temp1;
                temp1 = temp1 -> next; 
            }

            else{
                ListNode * newNode = new ListNode(temp2 -> val);
                temp3 -> next = temp2;
                temp3 = temp2;
                temp2 = temp2 -> next; 
            }
        }

        while(temp1 != NULL){
            ListNode * newNode = new ListNode(temp1 -> val);
            temp3 -> next = temp1;
            temp3 = temp1;
            temp1 = temp1 -> next; 
        }

        while(temp2 != NULL){
             ListNode * newNode = new ListNode(temp2 -> val);
             temp3 -> next = temp2;
             temp3 = temp2;
             temp2 = temp2 -> next; 
        }

        return dummy -> next;
    }
};
