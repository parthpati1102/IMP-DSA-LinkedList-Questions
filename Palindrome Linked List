class Solution {
public:
    ListNode * reverseList(ListNode * head){
         ListNode * prev = NULL;
         ListNode * curr = head;
         ListNode * forward = NULL;

         while(curr != NULL){
            forward = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = forward;
         }

         return prev;
    }
    bool isPalindrome(ListNode* head) {
        ListNode * fast = head;
        ListNode * slow = head;

        while(fast -> next != NULL){
            fast = fast -> next;

            if(fast -> next != NULL){
                fast = fast -> next;
                slow = slow -> next;
            }
        }

        ListNode * curr1 = head;
        ListNode * curr2 = reverseList(slow -> next);
  
        while(curr2 != NULL){
            if(curr1 -> val != curr2 -> val){
                return false;
            }

            curr1 = curr1 -> next;
            curr2 = curr2 -> next;
        }     

        return true;
    }
};
